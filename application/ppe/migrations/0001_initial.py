# Generated by Django 4.0.4 on 2022-07-17 13:30

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import ppe.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DivisionOne',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, verbose_name='СП 1-го уровня')),
            ],
            options={
                'verbose_name': 'СП 1-го уровня',
                'verbose_name_plural': 'СП 1-го уровня',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='DivisionTwo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024, verbose_name='СП 2-го уровня')),
                ('number_team_members', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Количество членов бригады')),
                ('responsible_accounting_ppe', models.CharField(default='Ivanov', max_length=256, verbose_name='Ответственный за учет СИЗ')),
                ('position', models.CharField(default='Engeener', max_length=256, verbose_name='Должность')),
                ('complete_set', models.CharField(default='Complect', max_length=256, verbose_name='Комплект')),
                ('division_two', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='ppe.divisionone', verbose_name='СП 1-го уровня')),
            ],
            options={
                'verbose_name': 'СП 2-го уровня',
                'verbose_name_plural': 'СП 2-го уровня',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='TbComplect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IdComplect', models.IntegerField(unique=True, verbose_name='ID комплекта')),
                ('NumberCompl', models.IntegerField(unique=True, verbose_name='Номер комплекта')),
                ('NameCompl', models.TextField(max_length=1024, unique=True, verbose_name='Наименование комплекта')),
            ],
            options={
                'verbose_name': 'Норма материала (Выгрузка)',
                'verbose_name_plural': 'Нормы материалов (Выгрузка)',
                'ordering': ('IdComplect',),
            },
        ),
        migrations.CreateModel(
            name='TbMaterialGr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IdMaterialGr', models.IntegerField(blank=True, unique=True, verbose_name='ID материала группы')),
                ('NameMaterialGr', models.CharField(max_length=256, unique=True, verbose_name='Материал')),
                ('IdEdIzm', models.CharField(blank=True, choices=[('1', 'шт.')], default='шт.', max_length=10, verbose_name='Ед. изм.')),
                ('number_materials', models.IntegerField(blank=True, null=True, verbose_name='Количество материалов')),
            ],
            options={
                'verbose_name': 'Материал группы (Выгрузка)',
                'verbose_name_plural': 'Материалы групп (Выгрузка)',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='TbNapr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IdNapr', models.IntegerField(unique=True, verbose_name='ID напряжения')),
                ('Napr', models.CharField(max_length=512, unique=True, verbose_name='Напряжение')),
                ('SortNapr', models.IntegerField(unique=True, verbose_name='Сорт напяржения')),
            ],
            options={
                'verbose_name': 'Напряжение (Выгрузка)',
                'verbose_name_plural': 'Напряжения (Выгрузка)',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='TbPodr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('NamePodrazd1', models.CharField(blank=True, max_length=512, verbose_name='СП 1-го уровня')),
                ('NamePodrazd2', models.CharField(blank=True, max_length=512, verbose_name='СП 2-го уровня')),
                ('NamePodrazd3', models.CharField(blank=True, max_length=512, verbose_name='СП 3-го уровня')),
            ],
            options={
                'verbose_name': 'Подразделение (Выгрузка)',
                'verbose_name_plural': 'Подразделения (Выгрузка)',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='TbRezult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Idisp', models.IntegerField(unique=True, verbose_name='ID испытания')),
                ('NameRez', models.CharField(max_length=9, verbose_name='Наименование испытания')),
            ],
            options={
                'verbose_name': 'Результат испытания (Выгрузка)',
                'verbose_name_plural': 'Результаты испытания (Выгрузка)',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='TbStatusMatJur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IdStatus', models.IntegerField(unique=True, verbose_name='ID статус')),
                ('NameStatus', models.CharField(max_length=50, verbose_name='Наименование статуса')),
            ],
            options={
                'verbose_name': 'Статус (Выгрузка)',
                'verbose_name_plural': 'Статусы (Выгрузка)',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='TbZavod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Id_zavod', models.IntegerField(unique=True, verbose_name='ID завода')),
                ('Name_zavod', models.CharField(max_length=512, unique=True, verbose_name='Наименование заводов-изготовителей')),
                ('Prizn_zav', models.BooleanField(default=True, verbose_name='Признак v[нет поставок]')),
            ],
            options={
                'verbose_name': 'Завод изготовитель (Выгрузка)',
                'verbose_name_plural': 'Заводы изготовители (Выгрузка)',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='TbMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IdMaterial', models.IntegerField(unique=True, verbose_name='ID материала')),
                ('NameMaterSap', models.CharField(max_length=256, verbose_name='Краткий текст материла')),
                ('SrokSlGod', models.CharField(max_length=6, verbose_name='Срок службы, лет')),
                ('PlanIspMes', models.CharField(max_length=5, verbose_name='План испытания, мес.')),
                ('NomSap', models.CharField(max_length=10, verbose_name='Номер SAP')),
                ('NameMaterUn', models.CharField(blank=True, max_length=128, verbose_name='Наименование универсальности')),
                ('PriznUn', models.BooleanField(verbose_name='Признак универсальности v[да]')),
                ('PriznIsp', models.BooleanField(verbose_name='Признак испытания v[да]')),
                ('PriznKol', models.BooleanField(verbose_name='Признак колличества v[да]')),
                ('IdMaterialGr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ppe.tbmaterialgr', to_field='IdMaterialGr', verbose_name='Материал')),
            ],
            options={
                'verbose_name': 'Все материалы (Выгрузка)',
                'verbose_name_plural': 'Все материалы (Выгрузка)',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='TbMaterGrNorm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IdMaterNorm', models.IntegerField(unique=True, verbose_name='ID материала норма')),
                ('NumberCompl', models.IntegerField(default=1, verbose_name='Номер комплекта ')),
                ('KolMater', models.CharField(blank=True, max_length=9, null=True, verbose_name='Количество материала')),
                ('IdPravilo', models.CharField(max_length=6, null=True, verbose_name='ID правило')),
                ('IdNapr', models.CharField(blank=True, max_length=6, null=True, verbose_name='Напряжение')),
                ('IdCompl', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='complect', to='ppe.tbcomplect', to_field='IdComplect', verbose_name='ID комплекта')),
                ('IdMaterialGr', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mater', to='ppe.tbmaterialgr', to_field='IdMaterialGr', verbose_name='Группа материала')),
            ],
            options={
                'verbose_name': 'ТБ материала нормы группа (Выгрузка)',
                'verbose_name_plural': 'ТБ материалов нормы группы (Выгрузка)',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Materials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10000)], verbose_name='Кол-во')),
                ('date_commissioning', models.DateField(blank=True, null=True, verbose_name='Дата ввода в эксплуатацию')),
                ('end_of_service_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания срока службы')),
                ('inventory_number', models.CharField(default=ppe.models.Materials.get_inventory_number, max_length=7, unique=True, verbose_name='Инвентарный номер')),
                ('test_date', models.DateField(blank=True, null=True, verbose_name='Дата испытания')),
                ('test_result', models.CharField(blank=True, choices=[('Годен', 'Годен'), ('Не годен', 'Не годен')], max_length=9, null=True, verbose_name='Результат испытания')),
                ('date_of_inspection', models.DateField(blank=True, null=True, verbose_name='Дата осмотра')),
                ('date_next_inspection', models.DateField(blank=True, null=True, verbose_name='Дата следующего осмотра')),
                ('inspection_result', models.CharField(blank=True, choices=[('Годен', 'Годен'), ('Не годен', 'Не годен')], max_length=100, null=True, verbose_name='Результат осмотра')),
                ('date_next_testst', models.DateField(blank=True, null=True, verbose_name='Дата следующего испытания')),
                ('expiration_date', models.CharField(default=3, max_length=15, verbose_name='Срок годности')),
                ('date_disposal', models.DateField(blank=True, null=True, verbose_name='Дата выбытия')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('is_blocked', models.BooleanField(default=False, verbose_name='В блоке')),
                ('date_of_block', models.DateField(blank=True, null=True, verbose_name='Дата блокировки')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор записи')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='group', to='ppe.divisiontwo', verbose_name='СП 1-го уровня')),
                ('login_of_block', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='block_user', to=settings.AUTH_USER_MODEL, verbose_name='Логин блокировки')),
                ('manufacturer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ppe.tbzavod', verbose_name='Завод изготовитель')),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='material', to='ppe.tbmaterialgr', verbose_name='Материал')),
                ('material_text', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='textmaterial', to='ppe.tbmaterial', to_field='IdMaterial', verbose_name='Краткий текст')),
                ('name_status', models.ForeignKey(default=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ppe.tbrezult', verbose_name='Статус')),
                ('number_sap', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='number_sap', to='ppe.tbmaterial', to_field='IdMaterial', verbose_name='Номер SAP')),
            ],
            options={
                'verbose_name': 'Материал (созданы)',
                'verbose_name_plural': 'Материалы (созданы)',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='DivisionThree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=1024, null=True, verbose_name='СП 3-го уровня')),
                ('number_team_members', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Количество членов бригады')),
                ('responsible_accounting_ppe', models.CharField(default='Ivanov', max_length=256, verbose_name='Ответственный за учет СИЗ')),
                ('position', models.CharField(default='Engineer', max_length=256, verbose_name='Должность')),
                ('complete_set', models.CharField(default='Complect', max_length=256, verbose_name='Комплект')),
                ('division_three', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='ppe.divisiontwo', verbose_name='СП 2-го уровня')),
            ],
            options={
                'verbose_name': 'СП 3-го уровня',
                'verbose_name_plural': 'СП 3-го уровня',
                'ordering': ['id'],
            },
        ),
    ]
